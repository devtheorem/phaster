name: PHP Composer
on: [push, pull_request]
jobs:
  build:
    name: Run tests on ${{ matrix.php }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [ '8.1', '8.2', '8.3', '8.4' ]

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: Phaster
        ports:
          # map port 3306 on service container to the host
          - 3306:3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5
      postgres:
        image: postgres
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install Composer dependencies
        run: composer install --no-progress

      - name: Perform static analysis
        run: composer analyze -- --error-format=github
        if: ${{ matrix.php == '8.4' }}

      - name: Run PHPUnit
        run: composer test-without-mssql
        env:
          POSTGRES_HOST: localhost

      - name: Check Formatting
        run: vendor/bin/php-cs-fixer fix -v --dry-run --stop-on-violation --using-cache=no
        if: ${{ matrix.php == '8.3' }}
